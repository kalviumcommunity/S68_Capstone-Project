# Schema Setup (Database Models)

I started the backend structure of JyothiryaFlames by building out the first data model: the *User Schema*. This is essential for managing user accounts, login/signup functionality, and future role-based access like admin controls.

# What I did:
- I Created a "Models/" folder to keep database schemas organized.
- Built a "User.js" file which defines how a user is stored in MongoDB.
- Used Mongoose to define the schema and connect it with our database.

# User Schema includes:
 Field     | Description 
-----------|------------
  username | User‚Äôs display name 
  email    | Used for login, must be unique 
  password | Will be hashed using bcrypt 
  role     | Defines if the person is a normal user or an admin ("user" or "admin") 
  timestamp| Automatically tracks when user was created or last updated ("createdAt", "updatedAt") 

# Why it matters:
- This schema is the foundation for login, signup, and admin control.
- "role" helps in giving different permissions to different users.
- "timestamps" are super useful for auditing or showing ‚Äúmember‚Äù info.

# Next  I‚Äôll make=
- Hash passwords using bcrypt
- Create POST routes for signup and login
- Generate JWT tokens for login sessions

Stay tuned! üöÄ
